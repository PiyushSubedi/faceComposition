/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package FreshPackage;

import java.awt.Dimension;
import java.awt.Font;
import java.awt.Graphics;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.image.BufferedImage;
import java.io.File;
import java.io.IOException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.imageio.ImageIO;
import javax.swing.ImageIcon;
import javax.swing.JButton;
import javax.swing.JFrame;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.border.BevelBorder;
//import FreshPackage.PopulationPanel;

/**
 *
 * @author subedipiyush
 */
public class Main extends javax.swing.JFrame implements ActionListener{

    /**
     * Creates new form Main
     */
    static BestCompositePanel select_panel;
    static PopulationPanel pop_panel; 
    static RatingsPanel rating_panel;
    int selectedImage = 1;
    double fitness_value=0.0;
    double[] ratings;
    
    ScratchGA generation;
    
    public Main() {
        ///initComponents();
        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        
        generation = new ScratchGA();
        ratings = new double[5];
        
        pop_panel = new PopulationPanel(this,generation);
        pop_panel.setLocation(10,10);
        pop_panel.setSize(600,600);
        pop_panel.setVisible(true);
        this.getContentPane().add(pop_panel);
        
        select_panel = new BestCompositePanel();
        select_panel.setSize(350,400);
        select_panel.setLocation(620,10);
        select_panel.setVisible(true);
        add(select_panel);
        
        rating_panel = new RatingsPanel(this);
        rating_panel.setSize(400,300);
        rating_panel.setLocation(620,410);
        rating_panel.setVisible(true);
        add(rating_panel);
        
        setSize(new Dimension(1000,700));
        setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        setResizable(false);
        setVisible(true);
        //pack();
    }
    /*
    public static void bestSelected(int img_no)
    {
        //BufferedImage img = new BufferedImage(40,40, BufferedImage.TYPE_INT_ARGB);
        BufferedImage img;
        try {
            img = ImageIO.read(new File("C:\\Users\\subedipiyush\\Desktop\\Project\\Final face images\\"+img_no+".jpg"));
            ImageIcon icon = new ImageIcon(img);
            JButton but = new JButton(icon);
            
            Graphics g = select_panel.getGraphics();
            //g.drawImage(img,5,5,pop_panel.getWidth(),pop_panel.getHeight()-10,this);
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        
    } */      
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 400, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 300, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Main.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Main().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        
        switch (e.getActionCommand()) {
            case "Calculate":
                calcFitnessValue();
                break;
            case "NextGeneration":
                nextGeneration();
                break;
            default:
                bestSelected(e);
                break;
        }
    }
    
    public void nextGeneration()
    {
        pop_panel.reGenerate(this,generation,selectedImage,ratings);
        pop_panel.repaint();
        select_panel.repaint();
        rating_panel.rePaint();
        this.repaint();
    }
    
    public void bestSelected(ActionEvent e)
    {
        selectedImage = pop_panel.getImageNumber((JButton)e.getSource());
        rating_panel.rePaint();
        fitness_value=0.0;
        paintFitnessValue(String.valueOf(fitness_value));
        BufferedImage img = null;
        try {
            img = ImageIO.read(new File("C:\\Users\\subedipiyush\\Desktop\\Project\\All\\composites\\"+selectedImage+".jpg"));
        } catch (IOException ex) {
            Logger.getLogger(Main.class.getName()).log(Level.SEVERE, null, ex);
        }
        paintSelectionPanel(img);
    }
    
    public void calcFitnessValue()
    {
        double bg_rating = (double)(rating_panel.bg_rating.getSelectedIndex())/10;
        double eyes_rating = (double)(rating_panel.eyes_rating.getSelectedIndex())/10;
        double nose_rating = (double)(rating_panel.nose_rating.getSelectedIndex())/10;
        double mouth_rating = (double)(rating_panel.mouth_rating.getSelectedIndex())/10;
        double forehead_rating = (double)(rating_panel.forehead_rating.getSelectedIndex())/10;
     
        ratings[0] = bg_rating;ratings[1] = eyes_rating;ratings[2] = nose_rating;ratings[3] = mouth_rating;
        ratings[4] = forehead_rating;
        
        fitness_value = bg_rating + eyes_rating + nose_rating + mouth_rating + forehead_rating;
        fitness_value = (double)Math.round(fitness_value * 100d)/100d;
        paintFitnessValue(String.valueOf(fitness_value));
    }
    
    public void paintFitnessValue(String fitness)
    {
        rating_panel.fitnessValue.setText(fitness);
    }
    
    public void paintSelectionPanel(BufferedImage img)
    {
        Graphics g = select_panel.getGraphics();
        g.drawImage(img,5,5,select_panel.getWidth()-10,select_panel.getHeight()-10,this);
        
    }

}
